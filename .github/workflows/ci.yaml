name: CI

on:
  - push
  - pull_request
env:
  TOX_PARALLEL_NO_SPINNER: 1

jobs:
  gentestmatrix:
    name: Generate test matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v2
      - uses: Gr1N/setup-poetry@v4
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      # jo is used only to generate matrix using json easily
      - name: Install necessary software
        run: sudo apt update && sudo apt install jo
      - id: setmatrix
        run: |
          poetry install
          stringified_matrix=$(poetry run tox -a | jo -a)
          echo "::set-output name=matrix::$stringified_matrix"
  test-containers:
    name: Test containers
    runs-on: ubuntu-latest
    needs: gentestmatrix
    strategy:
      matrix:
        toxenv: ${{fromJson(needs.gentestmatrix.outputs.matrix)}}
    steps:
    - name: checkout source code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
    - uses: Gr1N/setup-poetry@v4
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - name: Run tox job
      run: |
        poetry install
        poetry run tox -e ${{ matrix.toxenv }}
